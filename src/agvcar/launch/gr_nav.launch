<launch>
	<!--添加点云坐标系到kinect连杆坐标系的坐标变换-->
	<!--node pkg="tf2_ros" type="static_transform_publisher" name="static_transform_publisher" args="0.0 0 0 -1.57 0 -1.57 /camera /camera_depth" /-->
	<!--参数服务器中载入urdf-->
	<param name="robot_description" command="$(find xacro)/xacro $(find agvcar)/urdf/car_descripation.xacro" />
	<!--启动gazebo仿真环境,若为实际小车则注释掉-->
	<!--include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find agvcar)/config/myworld.world" />
	</include-->
	<!--在Gazebo中添加机器人模型-->
	<!--node pkg="gazebo_ros" type="spawn_model" name="spawn_model" args="-urdf -model ttza -param robot_description"/-->
	<!--启动rviz可视化工具-->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find agvcar)/config/agv.rviz"/>
	<!--关节状态发布节点-->
	<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />
	<!--机器人状态发布节点-->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
    <include file="$(find agvcar)/launch/nav.launch" />
	<node pkg="agv_control" type="control_all_try.py" name="control_all" output="screen" />
	<node pkg="tf2_web_republisher" type="tf2_web_republisher" name="tf2_web_republisher" />
	<!--include file="$(find agv_control)/src/launch/strero_camera.launch" /-->
    	<!--从激光雷达读如点云，仿真时注释掉,激光雷达点云发布频率为10-->
    	<!--include file="$(find ydlidar_ros_driver)/launch/lidar.launch" /-->
	<!--启动检测节点-->
	<!--node pkg="agv_control" type="control_camera.py" name="control_camera" output="screen" /-->
</launch>
